<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>www</groupId>
	<artifactId>WebApp</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>${project.artifactId}-${project.version}</name>

	<properties>
		<project.scm.id>github</project.scm.id>
		<github.global.server>github</github.global.server>
	</properties>
	
	<scm>
		<url>https://github.com/knrchowdary/myapp.git</url>
		<connection>scm:git:https://github.com/knrchowdary/myapp.git</connection>
		<developerConnection>scm:git:https://github.com/knrchowdary/myapp.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
       
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<arguments>-DskipTests</arguments>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-invoker</artifactId>
						<version>2.2</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- Add/update this in tomcat-home/conf/tomcat-users.xml file
					<role rolename="manager-gui"/>
					<user username="tomcat" password="s3cret" roles="admin,tomcat,manager-gui,manager-script"/>
					Run the maven goal tomcat7:deploy to deploy your war package to tomcat server.
				-->
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost:8888/manager/text</url>
					<update>true</update>
					<path>/${project.artifactId}-${project.version}</path>
					<username>tomcat</username>
					<password>s3cret</password>
				</configuration>
			</plugin>
			<!--
			<plugin>
				1. Add/update this in tomcat-home/conf/tomcat-users.xml file
					<role rolename="manager-gui"/>
					<user username="tomcat" password="s3cret" roles="admin,tomcat,manager-gui,manager-script"/>
					Run the maven goal tomcat7:deploy to deploy your war package to tomcat server.
				2. Add the server details in settings.xml file
						<server>
							<id>TomcatServer</id> 
							<username>tomcat</username>
							<password>s3cret</password>
						</server>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
	 			<configuration>
					<url>http://localhost:8888/manager/text</url>
					<update>true</update>
					<path>/${project.artifactId}-${project.version}</path>
					<server>TomcatServer</server>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>
        <!--
	<repositories>
		<repository>
			<id>nexus1</id>
			<name>libs-release</name>
			<url>http://18.218.88.137:8081/nexus/content/artifactory/libs-release</url>
		</repository>
	</repositories>
        -->
	<distributionManagement>
		<repository>
			<id>deployment</id>
			<name>releases</name>
			<url>http://192.168.56.15:8081/repository/releases/</url>
		</repository>
		<snapshotRepository>
			<id>deployment</id>
			<name>Snapshots</name>
			<url>http://192.168.56.15:8081/repository/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<sonar.jdbc.url>jdbc:postgresql://54.234.236.123/sonar</sonar.jdbc.url>
				<sonar.jdbc.driver>org.postgresql.Driver</sonar.jdbc.driver>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>
				<!-- SERVER ON A REMOTE HOST -->
				<sonar.host.url>http://54.234.236.123:9000</sonar.host.url>
			</properties>
		</profile>
	</profiles>
</project>
